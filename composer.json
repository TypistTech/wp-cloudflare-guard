{
	"name": "typisttech/wp-cloudflare-guard",
	"description": "Connecting WordPress with Cloudflare firewall, protect your WordPress site at DNS level. Automatically create firewall rules to block dangerous IPs",
	"version": "0.1.0",
	"keywords": [
		"wordpress",
		"wp",
		"cloudflare",
		"firewall",
		"security"
	],
	"homepage": "https://github.com/TypistTech/wp-cloudflare-guard",
	"license": "GPL-2.0+",
	"authors": [
		{
			"name": "Typist Tech",
			"email": "wp-cloudflare-guard@typist.tech",
			"homepage": "https://www.typist.tech/"
		},
		{
			"name": "Tang Rufus",
			"email": "tangrufus@gmail.com",
			"homepage": "https://www.typist.tech/",
			"role": "Developer"
		}
	],
	"support": {
		"email": "wp-cloudflare-guard@typist.tech",
		"issues": "https://github.com/TypistTech/wp-cloudflare-guard/issues",
		"forum": "https://wordpress.org/support/plugin/wp-cloudflare-guard",
		"source": "https://github.com/TypistTech/wp-cloudflare-guard"
	},
	"require": {
		"php": "^7.0",
		"cloudflare/cf-ip-rewrite": "^1.0",
		"typisttech/cloudflare-wp-api": "^0.3.0",
		"typisttech/wp-better-settings": "^0.7.1"
	},
	"require-dev": {
		"codeception/mockery-module": "^0.2.2",
		"jakoch/phantomjs-installer": "^2.1",
		"lucatume/wp-browser": "^1.19",
		"neronmoon/scriptsdev": "^0.1.0",
		"php-mock/php-mock-phpunit": "^1.1.2",
		"site5/phantoman": "^1.1",
		"wp-coding-standards/wpcs": "^0.10.0"
	},
	"autoload": {
		"classmap": [
			"src/"
		],
		"psr-0": {
			"WPCFG\\Vendor\\CloudFlare\\": "vendor/cloudflare/cf-ip-rewrite/src"
		},
		"psr-4": {
			"WPCFG\\Vendor\\Cloudflare\\": [
				"vendor/typisttech/cloudflare-wp-api/src",
				"vendor/jamesryanbell/cloudflare/src/CloudFlare"
			]
		}
	},
	"scripts": {
		"build": [
			"npm update",
			"grunt pre-build",
			"composer install --no-dev --prefer-dist --no-suggest",
			"grunt build"
		],
		"check-style": [
			"phpcs --standard=ruleset.xml --colors -p -s .",
			"phpcs --standard=tests/ruleset.xml --colors -p -s tests"
		],
		"fix-style": [
			"phpcbf --standard=ruleset.xml -p --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 .",
			"phpcbf --standard=tests/ruleset.xml -p --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 tests"
		],
		"install-dev-extra": [
			"PhantomInstaller\\Installer::installPhantomJS",
			"phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs"
		],
		"pre-autoload-dump": [
			"npm update",
			"cfwp build",
			"grunt replace_namespaces"
		],
		"pre-tag": [
			"npm update",
			"grunt pre-tag",
			"doctoc README.md",
			"github_changelog_generator --no-verbose"
		],
		"test": [
			"@test-unit",
			"@test-functional",
			"@test-acceptance"
		],
		"test-acceptance": "codecept run acceptance",
		"test-functional": "codecept run functional",
		"test-unit": "codecept run unit",
		"test-with-coverage": [
			"codecept run unit --coverage --coverage-xml --coverage-html",
			"@test-functional",
			"@test-acceptance"
		]
	},
	"scripts-dev": {
		"post-install-cmd": [
			"@install-dev-extra"
		],
		"post-update-cmd": [
			"@install-dev-extra"
		]
	},
	"config": {
		"optimize-autoloader": true,
		"sort-packages": true
	}
}
